{"version":3,"file":"static/js/925.285039b6.chunk.js","mappings":"qPACA,GAAgB,QAAU,+BAA+B,WAAa,kCAAkC,aAAe,oCAAoC,cAAgB,qCAAqC,KAAO,4BAA4B,QAAU,+BAA+B,WAAa,kCAAkC,QAAU,gC,SCKtU,SAASA,IAAiB,IAAD,IACtC,GAAoCC,EAAAA,EAAAA,UAAS,CAAC,GAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAiBC,EAAAA,EAAAA,MAAjBD,aAEAE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE9CC,EAAAA,EAAAA,YAAU,WAgBR,GAAIP,EAAc,CAChB,IAAMQ,EAAY,mCAAG,2FACnBX,GAAa,GADM,mBAGEY,EAAAA,EAAAA,GAAoBT,GAHtB,OAGXU,EAHW,OAIjBC,QAAQC,IAAIF,GACZf,EAAce,GALG,gDAOjBX,EAAS,EAAD,IAPS,yBASjBF,GAAa,GATI,4EAAH,qDAYlBW,GACD,CACF,GAAE,CAACR,IAEJW,QAAQC,IAAIlB,GAEZ,IAAQmB,EAAoDnB,EAApDmB,OAAQC,EAA4CpB,EAA5CoB,KAAMC,EAAsCrB,EAAtCqB,OAAQC,EAA8BtB,EAA9BsB,QAASC,EAAqBvB,EAArBuB,OAAQC,EAAaxB,EAAbwB,KAAMC,EAAOzB,EAAPyB,GAErD,OACE,iCACE,kBAAMC,UAAWC,EAAAA,UAAjB,WACE,SAAC,KAAD,CAASC,GAAIlB,EAAcgB,UAAWC,EAAAA,QAAtC,kCAGCzB,IAAa,SAAC2B,EAAA,EAAD,KACZzB,IACA,iBAAKsB,UAAWC,EAAAA,QAAhB,WACE,gBACED,UAAWC,EAAAA,aACXG,IAAG,2DAAsDL,EAAtD,SACHM,IAAKX,EACLY,MAAO,WAGT,iBAAKN,UAAWC,EAAAA,WAAhB,WACE,eAAID,UAAWC,EAAAA,cAAf,SAAmCP,KACnC,eAAIM,UAAWC,EAAAA,KAAf,2BACA,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,qBACA,eAAGD,UAAWC,EAAAA,QAAd,cAA6BR,SAE/B,iBAAKO,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,qBACA,cAAGD,UAAWC,EAAAA,QAAd,SAA4BN,QAE9B,iBAAKK,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,uBACA,uBAAIL,QAEN,iBAAKI,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,qBACA,cAAGD,UAAWC,EAAAA,QAAd,SAA4BJ,QAE9B,iBAAKG,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,WAAf,mBACA,cAAGD,UAAWC,EAAAA,QAAd,SAA4BH,iBAOtC,SAAC,KAAD,MAGL,C,qHClGKS,EAAW,kCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,eADlB,cACCG,EADD,yBAGEA,EAASpB,KAAKqB,SAHhB,kEAMA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCU,GAAnC,uFACkBU,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAAmCR,IADrD,cACCW,EADD,yBAGEA,EAASpB,MAHX,kEAMPD,EAAoB,GAAGuB,MAAK,SAAAtB,GAAI,OAAIC,QAAQC,IAAIF,EAAhB,G","sources":["webpack://rick-and-morty/./src/pages/CharacterPage/CharacterPage.module.css?7b6c","pages/CharacterPage/CharacterPage.jsx","serveses/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Section\":\"CharacterPage_Section__Y4BfE\",\"TxtWrapper\":\"CharacterPage_TxtWrapper__ToLPR\",\"CharacterImg\":\"CharacterPage_CharacterImg__l8L2p\",\"CharacterName\":\"CharacterPage_CharacterName__EG63N\",\"Info\":\"CharacterPage_Info__haKzP\",\"BackBtn\":\"CharacterPage_BackBtn__gHtMT\",\"TxtOptions\":\"CharacterPage_TxtOptions__nMwld\",\"Wrapper\":\"CharacterPage_Wrapper__O2Ejl\"};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, NavLink } from 'react-router-dom';\nimport { getCharacterDetails } from 'serveses/Api';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './CharacterPage.module.css';\n\nexport default function CharacterPage() {\n  const [characters, setCharacters] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  let { charactersId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    // const oneCharacter = async () => {\n    //   setIsLoading(true);\n    //   try {\n    //     await getCharacterDetails(charactersId).then(data => {\n    //       setCharacters(data);\n    //       console.log(data);\n    //     });\n    //   } catch (error) {\n    //     setError(error);\n    //   } finally {\n    //     setIsLoading(false);\n    //   }\n    // };\n    // oneCharacter();\n\n    if (charactersId) {\n      const oneCharacter = async () => {\n        setIsLoading(true);\n        try {\n          const data = await getCharacterDetails(charactersId);\n          console.log(data);\n          setCharacters(data);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      oneCharacter();\n    }\n  }, [charactersId]);\n\n  console.log(characters);\n\n  const { gender, name, status, species, origin, type, id } = characters;\n\n  return (\n    <>\n      <main className={css.Container}>\n        <NavLink to={locationFrom} className={css.BackBtn}>\n          ⬅️ GO BACK\n        </NavLink>\n        {isLoading && <Loader />}\n        {!error && (\n          <div className={css.Section}>\n            <img\n              className={css.CharacterImg}\n              src={`https://rickandmortyapi.com/api/character/avatar/${id}.jpeg`}\n              alt={name}\n              width={'240px'}\n            />\n\n            <div className={css.TxtWrapper}>\n              <h1 className={css.CharacterName}>{name}</h1>\n              <h2 className={css.Info}>Informations</h2>\n              <div className={css.Wrapper}>\n                <h3 className={css.TxtOptions}>Gender</h3>\n                <p className={css.TxtInfo}> {gender}</p>\n              </div>\n              <div className={css.Wrapper}>\n                <h3 className={css.TxtOptions}>Status</h3>\n                <p className={css.TxtInfo}>{status}</p>\n              </div>\n              <div className={css.Wrapper}>\n                <h3 className={css.TxtOptions}>Species </h3>\n                <p>{species}</p>\n              </div>\n              <div className={css.Wrapper}>\n                <h3 className={css.TxtOptions}>Origin</h3>\n                <p className={css.TxtInfo}>{origin}</p>\n              </div>\n              <div className={css.Wrapper}>\n                <h3 className={css.TxtOptions}>Type</h3>\n                <p className={css.TxtInfo}>{type}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport async function getAllCharacters() {\n  const response = await axios.get(`${BASE_URL}/character`);\n  // console.log(response.data.results); // add this line\n  return response.data.results;\n}\n\nexport async function getCharacterDetails(id) {\n  const response = await axios.get(`${BASE_URL}/character/${id}`);\n  // console.log(response.data); // add this line to check the data\n  return response.data;\n}\n\ngetCharacterDetails(1).then(data => console.log(data));\n"],"names":["CharacterPage","useState","characters","setCharacters","isLoading","setIsLoading","error","setError","charactersId","useParams","location","useLocation","locationFrom","state","from","useEffect","oneCharacter","getCharacterDetails","data","console","log","gender","name","status","species","origin","type","id","className","css","to","Loader","src","alt","width","BASE_URL","getAllCharacters","axios","response","results","then"],"sourceRoot":""}